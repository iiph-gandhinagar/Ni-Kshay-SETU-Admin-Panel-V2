import { configureStore } from "@reduxjs/toolkit";
import createSagaMiddleware from "redux-saga";
import rootReducer from "./reducer";
import rootSaga from "./saga";
const sagaMiddleware = createSagaMiddleware();
const store = configureStore({
    reducer: rootReducer,
    middleware: (getDefaultMiddleware) =>
        getDefaultMiddleware({
            serializableCheck: {
                ignoredActions: ["plugin/getKbasereportcsv", "configReducer/updateConfigByID", "reports/getAllOldAssessmentsWithoutPagination", "reports/getAllProAssessmentsWithoutPagination", "reports/sendOtp", "reports/getAllprescriptionWithoutPagination", "reports/getSubscriberLeaderboardInfo", "AuthReducer/forgotpassword", "AuthReducer/resetPassword", "dynmicAlgo/deleteDynamicAlgoByID", "dynmicAlgo/createDynamicAlgo", "dynmicAlgo/editDynamicAlgoByID", "dynmicAlgo/deleteDynamicAlgoByID'", "dynmicAlgo/uploadRootDynmicAlgoImage", "SurveyReducer/getAllSurveyHistoryWithoutPagination", "reports/updateSubscriberById", "feedback/getAllFeedbackHistoryWithoutPagination", "reports/updateSubscriberById", "AuthReducer/uploadAdminImage", "plugin/getKbaseCoursereportCsv", "reports/getAllUserAssessmentsWithoutPagination", "reports/getAllSubscribersWithoutPagination", "reports/getAllChatbotActivityWithoutPagination", "SurveyReducer/sendSurveyNotification", "plugin/sendAssessmentNotification", "patientManagement/sendAlgoNotification", "patientManagement/uploadAlgoIcon", "materialsReducer/sendResourceMaterialNotification", "configReducer/createUserNotification", "configReducer/createMessageNotification", "AuthReducer/login", "masterTable/updateDistrict", "masterTable/createDistrict", "masterTable/deleteDistrictById", "configReducer/updateMasterCmsByID", "configReducer/deleteMasterCmsByID", "configReducer/createMasterCmsFlag", "plugin/setActiveAssessment", "plugin/copyAssessment", "SurveyReducer/updateSurveyByID", "SurveyReducer/deleteSurveyByID", "SurveyReducer/createSurvey",
                    "masterTable/updateCader", "masterTable/createCader", "masterTable/deleteCader", "masterTable/createCountry", "masterTable/updateCountry", "masterTable/deleteCountry", "leaderboard/updateLeaderboardLevelByID", "leaderboard/deleteLeaderboardLevelByID", "leaderboard/createLeaderboardLevelFlag", "leaderboard/updateLeaderboardBadgeByID", "leaderboard/deleteLeaderboardBadgeByID", "leaderboard/createLeaderboardBadgeFlag",
                    "masterTable/createState", "masterTable/updateState", "masterTable/deleteBlock", "masterTable/updateBlock", "AuthReducer/updateRoleByID", "AuthReducer/deleteRoleByID", "plugin/transferQuery", "masterTable/getAssessmentQuestionReport", "masterTable/getAssessmentResultReport", "AuthReducer/createUser", "AuthReducer/updateUserDetailByID", "AuthReducer/deleteUserDetailByID", "masterTable/deleteAssessmentCertificate", "configReducer/getUserNotificationInfo",
                    "masterTable/createHealthFacility", "masterTable/deleteHealthFacilityById", "masterTable/deleteHealthFacility", "AuthReducer/createPermission", "chatModule/createAbbreviationByID", "masterTable/createAssessmentCertificate", "masterTable/deleteAssessmentCertificateById", "masterTable/uploadImage", "masterTable/updateAssessmentCertificate", "masterTable/createPluginManagement", "masterTable/updatePluginManagement", "masterTable/deletePluginManagement",
                    "chatModule/updateAbbreviationByID", "chatModule/deleteAbbreviationByID", "chatModule/createSystemQuestion", "chatModule/createSystemQuestion", "chatModule/updateSystemQuestionByID", "configReducer/deleteConfigByID", "tourReducer/deleteTourByID", "plugin/createAssessment", "plugin/updateAssessment", "plugin/deleteAssessment", "materialsReducer/uploadResourceFile", "tourReducer/createTour", "tourReducer/updateTourByID", "plugin/getQuestionsWithoutPaginationReport", "plugin/getInstituteReport",
                    "chatModule/deleteSystemQuestionByID", "masterTable/createPrimaryCader", "masterTable/deletePrimaryCader", "masterTable/updatePrimaryCader", "plugin/updateMasterinstituteById", "plugin/deleteMasterinstituteById", "AuthReducer/deletePermissionByID", "plugin/updateQuestion", "plugin/createQuestion", "plugin/deleteQuestion", "plugin/getQuestionsWithoutPagination", "materialsReducer/deleteMaterialByID", "flashNews/updateFlashNews", "flashNews/deleteFlashNews", "flashNews/createFlashNews", "flashNews/uploadFlashNewsImage", "feedback/createFeedback", "feedback/updateFeedbackByID", "feedback/deleteFeedbackByID", "feedback/uploadFeedbackImage",
                    "plugin/createMasterInstitute", "plugin/createChildInstitute", "plugin/deleteChildInstitute", "chatModule/deleteSystemQuestionByID", "chatModule/deleteAbbreviationByID", "masterTable/createPrimaryCader", "plugin/createManageTb", "plugin/deleteInstituteMemberById", "plugin/TransferOwnership", "materialsReducer/editMaterialByID", "materialsReducer/createMaterial", "ntep/createNtepIntervention", "ntep/deleteNtepInterventionByID", "ntep/editNtepInterventionByID", "static/uploadStaticBlogImage", "static/uploadStaticKeyFeatureFile", "static/uploadStaticWhatWeDoFile", "static/uploadStaticModuleFile", "static/uploadStaticResourceMaterialFile",
                    "masterTable/deletePrimaryCader", "masterTable/updatePrimaryCader", "masterTable/createSymptom", "masterTable/updateSymptom", "masterTable/deleteSymptom", "masterTable/deleteCadere", "masterTable/deletePrimaryCadere", "masterTable/deleteCountry", "masterTable/deleteState", "masterTable/deleteDistrict", "static/createStaticBlog", "static/updateStaticBlogById", "static/deleteStaticBlogById", "static/createStaticFaq", "static/updateStaticFaqById", "static/deleteStaticFaqById", "static/createStaticAppConfig", "static/updateStaticAppConfigById", "static/deleteStaticAppConfigById", "static/createStaticKeyFeature", "static/updateStaticKeyFeatureById", "static/deleteStaticKeyFeatureById", "static/createStaticTestimonial", "static/updateStaticTestimonialById", "static/deleteStaticTestimonialById", "static/createStaticModule", "static/updateStaticModuleById", "static/deleteStaticModuleById", "static/createStaticRelease", "static/updateStaticReleaseById", "static/deleteStaticReleaseById", "static/createStaticWhatWeDo", "static/updateStaticWhatWeDoById", "static/deleteStaticWhatWeDoById", "static/createStaticResourceMaterial", "static/updateStaticResourceMaterialById", "static/deleteStaticResourceMaterialById",
                    "masterTable/deleteBlock", "configReducer/createAppManagmentFlag", "masterTable/deleteHealthFacility", "configReducer/updateAppManagmentByID", "configReducer/deleteAppManagmentByID", "SurveyReducer/deleteSurveyByID", "plugin/createInstituteMember", "patientManagement/addNode", "patientManagement/editNodeById", "patientManagement/deleteNodeById", "reports/logActivity", "reports/getAllAdminActivityWithoutPagination", "reports/getAllSubscriberActivityWithoutPagination", "reports/getAllInquiriesWithoutPagination", "reports/getAllUserAppVersionWithoutPagination",
                ]
            },
        }).concat(sagaMiddleware),
});
sagaMiddleware.run(rootSaga);
export default store;
export type IRootState = ReturnType<typeof rootReducer>;
